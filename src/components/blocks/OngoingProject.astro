---
import Marquee from "@/components/ui/marquee";
import { statusStyles, type Status } from '@/script/statusStyles';



// You can later fetch this from your Supabase database
const currentProjects: Array<{
  id: number;
  name: string;
  description: string;
  status: Status;
  image: string;
  specifications?: {
    cavities?: number;
    material?: string;
    cycleTime?: string;
    dimensions?: string;
  };
}> = [
  {
    id: 1,
    name: "Automotive Dashboard Panel Mold",
    description:
      "High-precision injection mold for vehicle dashboard components with integrated air vent systems",
    status: "Co-Own Mold",
    image: "/images/projects/dashboard-mold.jpg",
    specifications: {
      cavities: 2,
      material: "PC/ABS Blend",
      cycleTime: "45-50 seconds",
      dimensions: "850mm x 450mm x 380mm",
    },
  },
  {
    id: 2,
    name: "Medical Device Housing",
    description:
      "Clean room certified mold for medical diagnostic equipment enclosure with antimicrobial properties",
    status: "Design Phase",
    image: "/images/projects/medical-housing.jpg",
    specifications: {
      cavities: 4,
      material: "Medical Grade PC",
      cycleTime: "22-25 seconds",
      dimensions: "300mm x 200mm x 150mm",
    },
  },
  {
    id: 3,
    name: "Consumer Electronics Enclosure",
    description:
      "Multi-cavity mold for smart home device housing with complex snap-fit features",
    status: "High Demand",
    image: "/images/projects/electronics-case.jpg",
    specifications: {
      cavities: 8,
      material: "ABS",
      cycleTime: "18-20 seconds",
      dimensions: "200mm x 150mm x 100mm",
    },
  },
  {
    id: 4,
    name: "Industrial Pump Components",
    description:
      "Heavy-duty mold for chemical-resistant pump housings with precision water channels",
    status: "Jobwerk",
    image: "/images/projects/pump-parts.jpg",
    specifications: {
      cavities: 1,
      material: "Glass-filled PPS",
      cycleTime: "40-45 seconds",
      dimensions: "400mm x 400mm x 300mm",
    },
  },
  {
    id: 5,
    name: "Packaging Solutions",
    description: "High-speed thin-wall container mold with IML capability",
    status: "Design Phase",
    image: "/images/projects/packaging.jpg",
    specifications: {
      cavities: 16,
      material: "PP",
      cycleTime: "6-8 seconds",
      dimensions: "600mm x 400mm x 450mm",
    },
  },
  {
    id: 6,
    name: "Aerospace Component Mold",
    description:
      "High-temperature mold for critical aerospace components with complex geometries",
    status: "For Rent",
    image: "/images/projects/aerospace-part.jpg",
    specifications: {
      cavities: 1,
      material: "PEEK",
      cycleTime: "60-65 seconds",
      dimensions: "350mm x 250mm x 200mm",
    },
  },
];
// Split projects into two rows for alternating marquees
const firstRow = currentProjects.slice(0, currentProjects.length / 2);
const secondRow = currentProjects.slice(currentProjects.length / 2);
---

<section class="relative py-2 ">
  
  <div class="container mx-auto  mb-2 ">
    <div class="flex justify-center mb-4 ">
      <span class="text-center font-bold text-gray-500 text-2xl">Ongoing Projects</span>
    </div>

    <!-- First Marquee -->
    <Marquee className="[--duration:12s]" pauseOnHover={true} client:load>
      {
        firstRow.map((project) => (
        <div
            class="relative w-72 mx-2 overflow-hidden rounded-md border p-3 cursor-pointer
                      border-gray-950/[.1] bg-gray-950/[.01] hover:bg-gray-950/[.05]
                      dark:border-gray-50/[.1] dark:bg-gray-50/[.10] dark:hover:bg-gray-50/[.15]"
          >
            <div class="flex flex-col gap-1">
                <span
                class={`inline-flex items-center gap-1.5 py-1.5 px-3 rounded-md text-xs font-medium ${statusStyles[project.status].bg}`}
              >
                {project.status}
                <span class="flex size-2">
                  <span
                    class={`animate-ping absolute inline-flex h-2 w-2 rounded-full opacity-75 ${statusStyles[project.status].glow}`}
                  />
                  <span
                    class={`relative inline-flex rounded-full h-2 w-2 ${statusStyles[project.status].glow}`}
                  />
                </span>
              </span>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                {project.name}
              </h3>
              <p class="text-gray-600 dark:text-gray-300">
                {project.description}
              </p>
            </div>
          </div>
        ))
      }
    </Marquee>

    <!-- Second Marquee (Reverse Direction) -->
    <Marquee
      className="[--duration:10s]"
      pauseOnHover={true}
      reverse={true}
      client:load
    >
      {
        secondRow.map((project) => (
          <div
            class="relative w-72 mx-2 overflow-hidden rounded-md border p-3 cursor-pointer
                      border-gray-950/[.1] bg-gray-950/[.01] hover:bg-gray-950/[.05]
                      dark:border-gray-50/[.1] dark:bg-gray-50/[.10] dark:hover:bg-gray-50/[.15]"
          >
            <div class="flex flex-col gap-1">
                <span
                class={`inline-flex items-center gap-1.5 py-1.5 px-3 rounded-md text-xs font-medium ${statusStyles[project.status].bg}`}
              >
                {project.status}
                <span class="flex size-2">
                  <span
                    class={`animate-ping absolute inline-flex h-2 w-2 rounded-full opacity-75 ${statusStyles[project.status].glow}`}
                  />
                  <span
                    class={`relative inline-flex rounded-full h-2 w-2 ${statusStyles[project.status].glow}`}
                  />
                </span>
              </span>
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                {project.name}
              </h3>
              <p class="text-gray-600 dark:text-gray-300">
                {project.description}
              </p>
            </div>
          </div>
        ))
      }
    </Marquee>
<!-- 
    Gradient Overlays
    <!-- <div
      class="pointer-events-none absolute inset-y-0 left-0 w-1/3 bg-gradient-to-r from-white dark:from-background"
    >
    </div>
    <div
      class="pointer-events-none absolute inset-y-0 right-0 w-1/3 bg-gradient-to-l from-white dark:from-background"
    >
    </div> --> 
  </div>

</section>
